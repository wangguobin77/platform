{"version":3,"sources":["jquery.shapeshift.js"],"names":["$","window","document","Plugin","defaults","pluginName","selector","enableDrag","enableCrossDrop","enableResize","enableTrash","align","colWidth","columns","minColumns","autoHeight","maxHeight","minHeight","gutterX","gutterY","paddingX","paddingY","animated","animateOnInit","animationSpeed","animationThreshold","dragClone","deleteClone","dragRate","dragWhitelist","crossDropWhitelist","cutoffStart","cutoffEnd","handle","cloneClass","activeClass","draggedClass","placeholderClass","originalContainerClass","currentContainerClass","previousContainerClass","element","options","this","extend","globals","$container","errorCheck","init","prototype","$children","error_msg","errors","children","length","console","error","createEvents","setGlobals","setIdentifier","setActiveChildren","enableFeatures","gridInit","render","afterInit","_this","off","on","e","trigger_drop_finished","setTargetPosition","destroy","shuffle","dragging","identifier","Math","random","toString","substring","addClass","enableDragNDrop","active_child_class","colspan","i","min_columns","total","_i","_j","_ref","_results","setParsedChildren","parsedChildren","push","$child","child","find","filter","el","parseInt","attr","height","outerHeight","fc_colspan","fc_width","first_child","gutter_x","single_width","col_width","outerWidth","reparse","setGridColumns","arrange","actual_columns","children_count","grid_width","inner_width","padding_x","innerWidth","floor","child_offset","animation_speed","attributes","child_positions","container_height","dragged_class","is_dragged_child","max_height","min_height","parsed_children","placeholder_class","total_children","getPositions","hasClass","siblings","stop","animate","css","setTimeout","trigger","include_dragged","col_heights","determineMultiposition","determinePositions","grid_height","gutter_y","padding_y","positions","recalculateSavedChildren","savePosition","saved_children","col","j","offset_x","offset_y","left","top","chosen_col","kosher","next_height","offset","possible_col_heights","possible_cols","span","_k","slice","splice","lowestCol","index","pop_i","saved_child","saved_i","to_pop","_ref1","_ref2","highestCol","$clone","$placeholder","$selected","active_class","clone_class","current_container_class","delete_clone","drag_clone","drag_rate","drag_timeout","original_container_class","previous_container_class","selected_offset_x","selected_offset_y","draggable","addClasses","containment","zIndex","start","ui","selected_tag","target","clone","insertBefore","prop","width","parent","drag","remove","appendTo","position","pageX","pageY","$current_container","$original_container","$previous_container","removeClass","shapeshift","data","droppable","accept","tolerance","over","drop","selected","helper","$start_container","$target","cutoff_end","cutoff_start","distance","position_i","selected_x","selected_y","shortest_distance","target_position","total_positions","x_dist","y_dist","sqrt","insertAfter","append","prepend","binding","resizing","calculateShuffled","container","arr","x","each","items","html","array","augmented_array","sort","a","b","ret","inArray","max","apply","$active_children","fn","bound_indentifier","old_class","match","jQuery","call"],"mappings":"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","file":"jquery.shapeshift.js","sourcesContent":["// Generated by CoffeeScript 1.4.0\n(function() {\n\n  (function($, window, document) {\n    var Plugin, defaults, pluginName;\n    pluginName = \"shapeshift\";\n    defaults = {\n      selector: \"*\",\n      enableDrag: true,\n      enableCrossDrop: true,\n      enableResize: true,\n      enableTrash: false,\n      align: \"center\",\n      colWidth: null,\n      columns: null,\n      minColumns: 1,\n      autoHeight: true,\n      maxHeight: null,\n      minHeight: 100,\n      gutterX: 10,\n      gutterY: 10,\n      paddingX: 10,\n      paddingY: 10,\n      animated: true,\n      animateOnInit: false,\n      animationSpeed: 225,\n      animationThreshold: 100,\n      dragClone: false,\n      deleteClone: true,\n      dragRate: 100,\n      dragWhitelist: \"*\",\n      crossDropWhitelist: \"*\",\n      cutoffStart: null,\n      cutoffEnd: null,\n      handle: false,\n      cloneClass: \"ss-cloned-child\",\n      activeClass: \"ss-active-child\",\n      draggedClass: \"ss-dragged-child\",\n      placeholderClass: \"ss-placeholder-child\",\n      originalContainerClass: \"ss-original-container\",\n      currentContainerClass: \"ss-current-container\",\n      previousContainerClass: \"ss-previous-container\"\n    };\n    Plugin = (function() {\n\n      function Plugin(element, options) {\n        this.element = element;\n        this.options = $.extend({}, defaults, options);\n        this.globals = {};\n        this.$container = $(element);\n        if (this.errorCheck()) {\n          this.init();\n        }\n      }\n\n      Plugin.prototype.errorCheck = function() {\n        var $children, error_msg, errors, options;\n        options = this.options;\n        errors = false;\n        error_msg = \"Shapeshift ERROR:\";\n        if (options.colWidth === null) {\n          $children = this.$container.children(options.selector);\n          if ($children.length === 0) {\n            errors = true;\n            console.error(\"\" + error_msg + \" option colWidth must be specified if Shapeshift is initialized with no active children.\");\n          }\n        }\n        return !errors;\n      };\n\n      Plugin.prototype.init = function() {\n        this.createEvents();\n        this.setGlobals();\n        this.setIdentifier();\n        this.setActiveChildren();\n        this.enableFeatures();\n        this.gridInit();\n        this.render();\n        return this.afterInit();\n      };\n\n      Plugin.prototype.createEvents = function() {\n        var $container, options,\n          _this = this;\n        options = this.options;\n        $container = this.$container;\n        $container.off(\"ss-arrange\").on(\"ss-arrange\", function(e, trigger_drop_finished) {\n          if (trigger_drop_finished == null) {\n            trigger_drop_finished = false;\n          }\n          return _this.render(false, trigger_drop_finished);\n        });\n        $container.off(\"ss-rearrange\").on(\"ss-rearrange\", function() {\n          return _this.render(true);\n        });\n        $container.off(\"ss-setTargetPosition\").on(\"ss-setTargetPosition\", function() {\n          return _this.setTargetPosition();\n        });\n        $container.off(\"ss-destroy\").on(\"ss-destroy\", function() {\n          return _this.destroy();\n        });\n        return $container.off(\"ss-shuffle\").on(\"ss-shuffle\", function() {\n          return _this.shuffle();\n        });\n      };\n\n      Plugin.prototype.setGlobals = function() {\n        this.globals.animated = this.options.animateOnInit;\n        return this.globals.dragging = false;\n      };\n\n      Plugin.prototype.afterInit = function() {\n        return this.globals.animated = this.options.animated;\n      };\n\n      Plugin.prototype.setIdentifier = function() {\n        this.identifier = \"shapeshifted_container_\" + Math.random().toString(36).substring(7);\n        return this.$container.addClass(this.identifier);\n      };\n\n      Plugin.prototype.enableFeatures = function() {\n        if (this.options.enableResize) {\n          this.enableResize();\n        }\n        if (this.options.enableDrag || this.options.enableCrossDrop) {\n          return this.enableDragNDrop();\n        }\n      };\n\n      Plugin.prototype.setActiveChildren = function() {\n        var $children, active_child_class, colspan, columns, i, min_columns, options, total, _i, _j, _ref, _results;\n        options = this.options;\n        $children = this.$container.children(options.selector);\n        active_child_class = options.activeClass;\n        total = $children.length;\n        for (i = _i = 0; 0 <= total ? _i < total : _i > total; i = 0 <= total ? ++_i : --_i) {\n          $($children[i]).addClass(active_child_class);\n        }\n        this.setParsedChildren();\n        columns = options.columns;\n        _results = [];\n        for (i = _j = 0, _ref = this.parsedChildren.length; 0 <= _ref ? _j < _ref : _j > _ref; i = 0 <= _ref ? ++_j : --_j) {\n          colspan = this.parsedChildren[i].colspan;\n          min_columns = options.minColumns;\n          if (colspan > columns && colspan > min_columns) {\n            options.minColumns = colspan;\n            _results.push(console.error(\"Shapeshift ERROR: There are child elements that have a larger colspan than the minimum columns set through options.\\noptions.minColumns has been set to \" + colspan));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n\n      Plugin.prototype.setParsedChildren = function() {\n        var $child, $children, child, i, parsedChildren, total, _i;\n        $children = this.$container.find(\".\" + this.options.activeClass).filter(\":visible\");\n        total = $children.length;\n        parsedChildren = [];\n        for (i = _i = 0; 0 <= total ? _i < total : _i > total; i = 0 <= total ? ++_i : --_i) {\n          $child = $($children[i]);\n          child = {\n            i: i,\n            el: $child,\n            colspan: parseInt($child.attr(\"data-ss-colspan\")) || 1,\n            height: $child.outerHeight()\n          };\n          parsedChildren.push(child);\n        }\n        return this.parsedChildren = parsedChildren;\n      };\n\n      Plugin.prototype.gridInit = function() {\n        var fc_colspan, fc_width, first_child, gutter_x, single_width;\n        gutter_x = this.options.gutterX;\n        if (!(this.options.colWidth >= 1)) {\n          first_child = this.parsedChildren[0];\n          fc_width = first_child.el.outerWidth();\n          fc_colspan = first_child.colspan;\n          single_width = (fc_width - ((fc_colspan - 1) * gutter_x)) / fc_colspan;\n          return this.globals.col_width = single_width + gutter_x;\n        } else {\n          return this.globals.col_width = this.options.colWidth + gutter_x;\n        }\n      };\n\n      Plugin.prototype.render = function(reparse, trigger_drop_finished) {\n        if (reparse == null) {\n          reparse = false;\n        }\n        if (reparse) {\n          this.setActiveChildren();\n        }\n        this.setGridColumns();\n        return this.arrange(false, trigger_drop_finished);\n      };\n\n      Plugin.prototype.setGridColumns = function() {\n        var actual_columns, children_count, col_width, colspan, columns, globals, grid_width, gutter_x, i, inner_width, minColumns, options, padding_x, _i, _ref;\n        globals = this.globals;\n        options = this.options;\n        col_width = globals.col_width;\n        gutter_x = options.gutterX;\n        padding_x = options.paddingX;\n        inner_width = this.$container.innerWidth() - (padding_x * 2);\n        minColumns = options.minColumns;\n        columns = options.columns || Math.floor((inner_width + gutter_x) / col_width);\n        if (minColumns && minColumns > columns) {\n          columns = minColumns;\n        }\n        globals.columns = columns;\n        children_count = this.parsedChildren.length;\n        if (columns > children_count) {\n          actual_columns = 0;\n          for (i = _i = 0, _ref = this.parsedChildren.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n            colspan = this.parsedChildren[i].colspan;\n            if (colspan + actual_columns <= columns) {\n              actual_columns += colspan;\n            }\n          }\n          columns = actual_columns;\n        }\n        globals.child_offset = padding_x;\n        switch (options.align) {\n          case \"center\":\n            grid_width = (columns * col_width) - gutter_x;\n            return globals.child_offset += (inner_width - grid_width) / 2;\n          case \"right\":\n            grid_width = (columns * col_width) - gutter_x;\n            return globals.child_offset += inner_width - grid_width;\n        }\n      };\n\n      Plugin.prototype.arrange = function(reparse, trigger_drop_finished) {\n        var $child, $container, animated, animation_speed, attributes, child_positions, container_height, dragged_class, globals, i, is_dragged_child, max_height, min_height, options, parsed_children, placeholder_class, total_children, _i;\n        if (reparse) {\n          this.setParsedChildren();\n        }\n        globals = this.globals;\n        options = this.options;\n        $container = this.$container;\n        child_positions = this.getPositions();\n        parsed_children = this.parsedChildren;\n        total_children = parsed_children.length;\n        animated = globals.animated && total_children <= options.animationThreshold;\n        animation_speed = options.animationSpeed;\n        dragged_class = options.draggedClass;\n        for (i = _i = 0; 0 <= total_children ? _i < total_children : _i > total_children; i = 0 <= total_children ? ++_i : --_i) {\n          $child = parsed_children[i].el;\n          attributes = child_positions[i];\n          is_dragged_child = $child.hasClass(dragged_class);\n          if (is_dragged_child) {\n            placeholder_class = options.placeholderClass;\n            $child = $child.siblings(\".\" + placeholder_class);\n          }\n          if (animated && !is_dragged_child) {\n            $child.stop(true, false).animate(attributes, animation_speed, function() {});\n          } else {\n            $child.css(attributes);\n          }\n        }\n        if (trigger_drop_finished) {\n          if (animated) {\n            setTimeout((function() {\n              return $container.trigger(\"ss-drop-complete\");\n            }), animation_speed);\n          } else {\n            $container.trigger(\"ss-drop-complete\");\n          }\n        }\n        $container.trigger(\"ss-arranged\");\n        if (options.autoHeight) {\n          container_height = globals.container_height;\n          max_height = options.maxHeight;\n          min_height = options.minHeight;\n          if (min_height && container_height < min_height) {\n            container_height = min_height;\n          } else if (max_height && container_height > max_height) {\n            container_height = max_height;\n          }\n          return $container.height(container_height);\n        }\n      };\n\n      Plugin.prototype.getPositions = function(include_dragged) {\n        var col_heights, determineMultiposition, determinePositions, dragged_class, globals, grid_height, gutter_y, i, options, padding_y, parsed_children, positions, recalculateSavedChildren, savePosition, saved_children, total_children, _i, _ref,\n          _this = this;\n        if (include_dragged == null) {\n          include_dragged = true;\n        }\n        globals = this.globals;\n        options = this.options;\n        gutter_y = options.gutterY;\n        padding_y = options.paddingY;\n        dragged_class = options.draggedClass;\n        parsed_children = this.parsedChildren;\n        total_children = parsed_children.length;\n        col_heights = [];\n        for (i = _i = 0, _ref = globals.columns; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\n          col_heights.push(padding_y);\n        }\n        savePosition = function(child) {\n          var col, colspan, j, offset_x, offset_y, _j, _results;\n          col = child.col;\n          colspan = child.colspan;\n          offset_x = (child.col * globals.col_width) + globals.child_offset;\n          offset_y = col_heights[col];\n          positions[child.i] = {\n            left: offset_x,\n            top: offset_y\n          };\n          col_heights[col] += child.height + gutter_y;\n          if (colspan >= 1) {\n            _results = [];\n            for (j = _j = 1; 1 <= colspan ? _j < colspan : _j > colspan; j = 1 <= colspan ? ++_j : --_j) {\n              _results.push(col_heights[col + j] = col_heights[col]);\n            }\n            return _results;\n          }\n        };\n        determineMultiposition = function(child) {\n          var chosen_col, col, colspan, height, kosher, next_height, offset, possible_col_heights, possible_cols, span, _j, _k;\n          possible_cols = col_heights.length - child.colspan + 1;\n          possible_col_heights = col_heights.slice(0).splice(0, possible_cols);\n          chosen_col = void 0;\n          for (offset = _j = 0; 0 <= possible_cols ? _j < possible_cols : _j > possible_cols; offset = 0 <= possible_cols ? ++_j : --_j) {\n            col = _this.lowestCol(possible_col_heights, offset);\n            colspan = child.colspan;\n            height = col_heights[col];\n            kosher = true;\n            for (span = _k = 1; 1 <= colspan ? _k < colspan : _k > colspan; span = 1 <= colspan ? ++_k : --_k) {\n              next_height = col_heights[col + span];\n              if (height < next_height) {\n                kosher = false;\n                break;\n              }\n            }\n            if (kosher) {\n              chosen_col = col;\n              break;\n            }\n          }\n          return chosen_col;\n        };\n        saved_children = [];\n        recalculateSavedChildren = function() {\n          var index, pop_i, saved_child, saved_i, to_pop, _j, _k, _ref1, _ref2, _results;\n          to_pop = [];\n          for (saved_i = _j = 0, _ref1 = saved_children.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; saved_i = 0 <= _ref1 ? ++_j : --_j) {\n            saved_child = saved_children[saved_i];\n            saved_child.col = determineMultiposition(saved_child);\n            if (saved_child.col >= 0) {\n              savePosition(saved_child);\n              to_pop.push(saved_i);\n            }\n          }\n          _results = [];\n          for (pop_i = _k = _ref2 = to_pop.length - 1; _k >= 0; pop_i = _k += -1) {\n            index = to_pop[pop_i];\n            _results.push(saved_children.splice(index, 1));\n          }\n          return _results;\n        };\n        positions = [];\n        (determinePositions = function() {\n          var child, _j, _results;\n          _results = [];\n          for (i = _j = 0; 0 <= total_children ? _j < total_children : _j > total_children; i = 0 <= total_children ? ++_j : --_j) {\n            child = parsed_children[i];\n            if (!(!include_dragged && child.el.hasClass(dragged_class))) {\n              if (child.colspan > 1) {\n                child.col = determineMultiposition(child);\n              } else {\n                child.col = _this.lowestCol(col_heights);\n              }\n              if (child.col === void 0) {\n                saved_children.push(child);\n              } else {\n                savePosition(child);\n              }\n              _results.push(recalculateSavedChildren());\n            } else {\n              _results.push(void 0);\n            }\n          }\n          return _results;\n        })();\n        if (options.autoHeight) {\n          grid_height = col_heights[this.highestCol(col_heights)] - gutter_y;\n          globals.container_height = grid_height + padding_y;\n        }\n        return positions;\n      };\n\n      Plugin.prototype.enableDragNDrop = function() {\n        var $clone, $container, $placeholder, $selected, active_class, clone_class, current_container_class, delete_clone, drag_clone, drag_rate, drag_timeout, dragged_class, options, original_container_class, placeholder_class, previous_container_class, selected_offset_x, selected_offset_y,\n          _this = this;\n        options = this.options;\n        $container = this.$container;\n        active_class = options.activeClass;\n        dragged_class = options.draggedClass;\n        placeholder_class = options.placeholderClass;\n        original_container_class = options.originalContainerClass;\n        current_container_class = options.currentContainerClass;\n        previous_container_class = options.previousContainerClass;\n        delete_clone = options.deleteClone;\n        drag_rate = options.dragRate;\n        drag_clone = options.dragClone;\n        clone_class = options.cloneClass;\n        $selected = $placeholder = $clone = selected_offset_y = selected_offset_x = null;\n        drag_timeout = false;\n        if (options.enableDrag) {\n          $container.children(\".\" + active_class).filter(options.dragWhitelist).draggable({\n            addClasses: false,\n            containment: 'document',\n            handle: options.handle,\n            zIndex: 9999,\n            start: function(e, ui) {\n              var selected_tag;\n              _this.globals.dragging = true;\n              $selected = $(e.target);\n              if (drag_clone) {\n                $clone = $selected.clone(false, false).insertBefore($selected).addClass(clone_class);\n              }\n              $selected.addClass(dragged_class);\n              selected_tag = $selected.prop(\"tagName\");\n              $placeholder = $(\"<\" + selected_tag + \" class='\" + placeholder_class + \"' style='height: \" + ($selected.height()) + \"px; width: \" + ($selected.width()) + \"px'></\" + selected_tag + \">\");\n              $selected.parent().addClass(original_container_class).addClass(current_container_class);\n              selected_offset_y = $selected.outerHeight() / 2;\n              return selected_offset_x = $selected.outerWidth() / 2;\n            },\n            drag: function(e, ui) {\n              if (!drag_timeout && !(drag_clone && delete_clone && $(\".\" + current_container_class)[0] === $(\".\" + original_container_class)[0])) {\n                $placeholder.remove().appendTo(\".\" + current_container_class);\n                $(\".\" + current_container_class).trigger(\"ss-setTargetPosition\");\n                drag_timeout = true;\n                window.setTimeout((function() {\n                  return drag_timeout = false;\n                }), drag_rate);\n              }\n              ui.position.left = e.pageX - $selected.parent().offset().left - selected_offset_x;\n              return ui.position.top = e.pageY - $selected.parent().offset().top - selected_offset_y;\n            },\n            stop: function() {\n              var $current_container, $original_container, $previous_container;\n              _this.globals.dragging = false;\n              $original_container = $(\".\" + original_container_class);\n              $current_container = $(\".\" + current_container_class);\n              $previous_container = $(\".\" + previous_container_class);\n              $selected.removeClass(dragged_class);\n              $(\".\" + placeholder_class).remove();\n              if (drag_clone) {\n                if (delete_clone && $(\".\" + current_container_class)[0] === $(\".\" + original_container_class)[0]) {\n                  $clone.remove();\n                  $(\".\" + current_container_class).trigger(\"ss-rearrange\");\n                } else {\n                    $clone.removeClass(clone_class);\n                    $original_container.shapeshift($original_container.data(\"plugin_shapeshift\").options);\n                    $current_container.shapeshift($current_container.data(\"plugin_shapeshift\").options);\n                }\n              }\n              if ($original_container[0] === $current_container[0]) {\n                $current_container.trigger(\"ss-rearranged\", $selected);\n              } else {\n                $original_container.trigger(\"ss-removed\", $selected);\n                $current_container.trigger(\"ss-added\", $selected);\n              }\n              $original_container.trigger(\"ss-arrange\").removeClass(original_container_class);\n              $current_container.trigger(\"ss-arrange\", true).removeClass(current_container_class);\n              $previous_container.trigger(\"ss-arrange\").removeClass(previous_container_class);\n              return $selected = $placeholder = null;\n            }\n          });\n        }\n        if (options.enableCrossDrop) {\n          return $container.droppable({\n            accept: options.crossDropWhitelist,\n            tolerance: 'intersect',\n            over: function(e) {\n              $(\".\" + previous_container_class).removeClass(previous_container_class);\n              $(\".\" + current_container_class).removeClass(current_container_class).addClass(previous_container_class);\n              return $(e.target).addClass(current_container_class);\n            },\n            drop: function(e, selected) {\n              var $current_container, $original_container, $previous_container;\n              if (_this.options.enableTrash) {\n                $original_container = $(\".\" + original_container_class);\n                $current_container = $(\".\" + current_container_class);\n                $previous_container = $(\".\" + previous_container_class);\n                $selected = $(selected.helper);\n                $current_container.trigger(\"ss-trashed\", $selected);\n                $selected.remove();\n                $original_container.trigger(\"ss-rearrange\").removeClass(original_container_class);\n                $current_container.trigger(\"ss-rearrange\").removeClass(current_container_class);\n                return $previous_container.trigger(\"ss-arrange\").removeClass(previous_container_class);\n              }\n            }\n          });\n        }\n      };\n\n      Plugin.prototype.setTargetPosition = function() {\n        var $selected, $start_container, $target, attributes, child_positions, cutoff_end, cutoff_start, distance, dragged_class, options, parsed_children, placeholder_class, position_i, previous_container_class, selected_x, selected_y, shortest_distance, target_position, total_positions, x_dist, y_dist, _i;\n        options = this.options;\n        if (!options.enableTrash) {\n          dragged_class = options.draggedClass;\n          $selected = $(\".\" + dragged_class);\n          $start_container = $selected.parent();\n          parsed_children = this.parsedChildren;\n          child_positions = this.getPositions(false);\n          total_positions = child_positions.length;\n          selected_x = $selected.offset().left - $start_container.offset().left + (this.globals.col_width / 2);\n          selected_y = $selected.offset().top - $start_container.offset().top + ($selected.height() / 2);\n          shortest_distance = 9999999;\n          target_position = 0;\n          if (total_positions > 1) {\n            cutoff_start = options.cutoffStart + 1 || 0;\n            cutoff_end = options.cutoffEnd || total_positions;\n            for (position_i = _i = cutoff_start; cutoff_start <= cutoff_end ? _i < cutoff_end : _i > cutoff_end; position_i = cutoff_start <= cutoff_end ? ++_i : --_i) {\n              attributes = child_positions[position_i];\n              if (attributes) {\n                y_dist = selected_x - attributes.left;\n                x_dist = selected_y - attributes.top;\n                if (y_dist > 0 && x_dist > 0) {\n                  distance = Math.sqrt((x_dist * x_dist) + (y_dist * y_dist));\n                  if (distance < shortest_distance) {\n                    shortest_distance = distance;\n                    target_position = position_i;\n                    if (position_i === total_positions - 1) {\n                      if (y_dist > parsed_children[position_i].height / 2) {\n                        target_position++;\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            if (target_position === parsed_children.length) {\n              $target = parsed_children[target_position - 1].el;\n              $selected.insertAfter($target);\n            } else {\n              $target = parsed_children[target_position].el;\n              $selected.insertBefore($target);\n            }\n          } else {\n            if (total_positions === 1) {\n              attributes = child_positions[0];\n              if (attributes.left < selected_x) {\n                this.$container.append($selected);\n              } else {\n                this.$container.prepend($selected);\n              }\n            } else {\n              this.$container.append($selected);\n            }\n          }\n          this.arrange(true);\n          if ($start_container[0] !== $selected.parent()[0]) {\n              previous_container_class = options.previousContainerClass;\n              if ($(\".\" + previous_container_class).data(\"plugin_shapeshift\").options.enableCrossDrop == true) {\n                  return $(\".\" + previous_container_class).trigger(\"ss-rearrange\");\n              } else {\n                  return $(\".\" + previous_container_class);\n              }\n          }\n        } else {\n          placeholder_class = this.options.placeholderClass;\n          return $(\".\" + placeholder_class).remove();\n        }\n      };\n\n      Plugin.prototype.enableResize = function() {\n        var animation_speed, binding, resizing,\n          _this = this;\n        animation_speed = this.options.animationSpeed;\n        resizing = false;\n        binding = \"resize.\" + this.identifier;\n        return $(window).on(binding, function() {\n          if (!resizing) {\n            resizing = true;\n            setTimeout((function() {\n              return _this.render();\n            }), animation_speed / 3);\n            setTimeout((function() {\n              return _this.render();\n            }), animation_speed / 3);\n            return setTimeout(function() {\n              resizing = false;\n              return _this.render();\n            }, animation_speed / 3);\n          }\n        });\n      };\n\n      Plugin.prototype.shuffle = function() {\n        var calculateShuffled;\n        calculateShuffled = function(container, activeClass) {\n          var shuffle;\n          shuffle = function(arr) {\n            var i, j, x;\n            j = void 0;\n            x = void 0;\n            i = arr.length;\n            while (i) {\n              j = parseInt(Math.random() * i);\n              x = arr[--i];\n              arr[i] = arr[j];\n              arr[j] = x;\n            }\n            return arr;\n          };\n          return container.each(function() {\n            var items;\n            items = container.find(\".\" + activeClass).filter(\":visible\");\n            if (items.length) {\n              return container.html(shuffle(items));\n            } else {\n              return this;\n            }\n          });\n        };\n        if (!this.globals.dragging) {\n          calculateShuffled(this.$container, this.options.activeClass);\n          this.enableFeatures();\n          return this.$container.trigger(\"ss-rearrange\");\n        }\n      };\n\n      Plugin.prototype.lowestCol = function(array, offset) {\n        var augmented_array, i, length, _i;\n        if (offset == null) {\n          offset = 0;\n        }\n        length = array.length;\n        augmented_array = [];\n        for (i = _i = 0; 0 <= length ? _i < length : _i > length; i = 0 <= length ? ++_i : --_i) {\n          augmented_array.push([array[i], i]);\n        }\n        augmented_array.sort(function(a, b) {\n          var ret;\n          ret = a[0] - b[0];\n          if (ret === 0) {\n            ret = a[1] - b[1];\n          }\n          return ret;\n        });\n        return augmented_array[offset][1];\n      };\n\n      Plugin.prototype.highestCol = function(array) {\n        return $.inArray(Math.max.apply(window, array), array);\n      };\n\n      Plugin.prototype.destroy = function() {\n        var $active_children, $container, active_class;\n        $container = this.$container;\n        $container.off(\"ss-arrange\");\n        $container.off(\"ss-rearrange\");\n        $container.off(\"ss-setTargetPosition\");\n        $container.off(\"ss-destroy\");\n        active_class = this.options.activeClass;\n        $active_children = $container.find(\".\" + active_class);\n        if (this.options.enableDrag) {\n          $active_children.draggable('destroy');\n        }\n        if (this.options.enableCrossDrop) {\n          $container.droppable('destroy');\n        }\n        $active_children.removeClass(active_class);\n        return $container.removeClass(this.identifier);\n      };\n\n      return Plugin;\n\n    })();\n    return $.fn[pluginName] = function(options) {\n      return this.each(function() {\n        var bound_indentifier, old_class, _ref, _ref1;\n        old_class = (_ref = $(this).attr(\"class\")) != null ? (_ref1 = _ref.match(/shapeshifted_container_\\w+/)) != null ? _ref1[0] : void 0 : void 0;\n        if (old_class) {\n          bound_indentifier = \"resize.\" + old_class;\n          $(window).off(bound_indentifier);\n          $(this).removeClass(old_class);\n        }\n        return $.data(this, \"plugin_\" + pluginName, new Plugin(this, options));\n      });\n    };\n  })(jQuery, window, document);\n\n}).call(this);\n"]}